const API_BASE="https://api.ficsit.app",API_GRAPHQL=API_BASE+"/v2/query",API_GRAPHQL_PLAYGROUND=API_BASE+"/v2",API_REST=API_BASE+"/v1",API_REST_DOCS=API_BASE+"/swagger/index.html",jsCrypto="undefined"!=typeof window?window.crypto||window.msCrypto:void 0,cryptoSubtle=jsCrypto&&(jsCrypto.subtle||jsCrypto.webkitSubtle),isIE=!(!jsCrypto||!window.msCrypto),sha256Browser=e=>{const t=cryptoSubtle.digest({name:"SHA-256"},e);return new Promise(((e,n)=>{isIE?(t.oncomplete=function(t){e(new Uint8Array(t.target.result))},t.onerror=function(e){n(e)}):Promise.resolve(t).then((function(t){e(new Uint8Array(t))})).catch((function(e){n(e)}))}))},nodeCrypto="undefined"==typeof window?"undefined"==typeof require?null:eval("require('crypto')"):null,hash=async e=>{if("undefined"==typeof window?!nodeCrypto||!nodeCrypto.createHash:!cryptoSubtle)return Promise.resolve("");if("undefined"==typeof window)return Promise.resolve(""+nodeCrypto.createHash("sha256").update(e).digest("hex"));let t;if("undefined"!=typeof TextEncoder)t=(new TextEncoder).encode(e);else{t=new Uint8Array(e.length);for(let n=0,o=e.length;n<o;n++)t[n]=e.charCodeAt(n)}const n=await sha256Browser(t);let o="";for(let r=0,s=n.length;r<s;r++){const e=n[r].toString(16);o+="00".slice(0,Math.max(0,2-e.length))+e}return o};export{API_GRAPHQL as A,API_GRAPHQL_PLAYGROUND as a,API_REST as b,API_REST_DOCS as c,API_BASE as d,hash as h};
